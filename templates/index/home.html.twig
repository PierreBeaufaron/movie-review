{% extends 'base.html.twig' %}

{% block title %}
    {{ parent() }} - {{page_title}}
{% endblock %}

{% block body %}

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="grid grid-cols-1 xl:grid-cols-2 gap-4">
            {% for genre in genres %}
            
                <div class="max-w-sm p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700">
                    <a href="#">
                        <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">{{ genre.name }}</h5>
                    </a>
                    <a href="{{ path('genre_item', { id: genre.id }) }}" class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                        Voir les films
                        <svg class="rtl:rotate-180 w-3.5 h-3.5 ms-2" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
                        </svg>
                    </a>
                </div>

            {% endfor %}
        </div>
        <div>
            <div class="basis-1/3 rounded-xl bg-blue-100 p-5">
                <form action="{{ path('movies_list') }}" method="get" class="mx-auto">                
                        <label for="q" class="block mb-2 text-2xl font-medium text-gray-900 dark:text-white">Recherchez un film</label>
                        <div class="mb-5 flex">
                            <select id="genre" name="genre" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-s-lg focus:ring-blue-500 focus:border-blue-500 block p-2.5 w-40 border-e-0 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                                <option value="none" selected>Choisir un genre</option>
                                {% for genre in genres %}
                                    <option value="{{ genre.id }}">{{ genre.name }}</option>
                                {% endfor %}
                            </select>
                            <input type="text" id="movie-search" name="title" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Entrez le titre d'un film" required />
                            <button type="submit" class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-e-lg text-sm w-full sm:w-auto px-2.5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                                <svg class="w-6 h-6 text-gray-800 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
                                <path stroke="white" stroke-linecap="round" stroke-width="2" d="m21 21-3.5-3.5M17 10a7 7 0 1 1-14 0 7 7 0 0 1 14 0Z"/>
                                </svg>
                            </button>
                        </div>            
                </form>
            </div>
        </div>
    </div>

    <script>
        $(function() {
    console.log("Auto-complete script initialized.");

    $("#movie-search").autocomplete({
        source: function(request, response) {
            $.ajax({
                url: "{{ path('movie_autocomplete') }}",
                data: {
                    q: request.term
                },
                success: function(data) {
                    console.log("Data received from server:", data);
                    
                    // Vérification que data est bien un tableau de chaînes
                    if (Array.isArray(data) && typeof data[0] === 'string') {
                        response(data); // Passe les données directement à l'auto-complétion
                    } else {
                        console.error("Unexpected data format:", data);
                    }
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error("Auto-complete request failed:", textStatus, errorThrown);
                }
            });
        },
        minLength: 2
    });
});
    </script>
    
{% endblock %}
